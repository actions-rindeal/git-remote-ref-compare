name: "Smoke Test"

on:
  push:
    branches:
      - 'master'
    paths:
      - ".github/workflows/smoke-test.yml"
  pull_request:
  workflow_dispatch:

# outputs:
#   'refs-differ':
#     description: "Boolean indicating if the repositories are different"
#   'diff-message':
#     description: "Optional message describing the differences"
#   'diff-type':
#     description: "Optional type of the difference"
#   'source-repo-url':
#     description: "URL of the source Git repository"
#   'target-repo-url':
#     description: "URL of the target Git repository"

jobs:
  'smoke-test':
    runs-on: 'ubuntu-latest'

    strategy:
      # max-parallel: 1
      fail-fast: false
      matrix:
        'json':
          - |
            {
              "testName": "Test #1 - Same",
              "expectedOutcome": "success",
              "expectedRefsDiffer": false,
              "sourceRepoUrl": ${{ toJSON(format('https://github.com/{0}.git', github.repository)) }},
              "targetRepoUrl": ${{ toJSON(format('https://github.com/{0}.git', github.repository)) }}
            }
          - |
            {
              "testName": "Test #2 - Mirrored",
              "expectedOutcome": "success",
              "expectedRefsDiffer": false,
              "sourceRepoUrl": "https://git.launchpad.net/beautifulsoup",
              "targetRepoUrl": "https://github.com/facsimiles/beautifulsoup.git"
            }
          - |
            {
              "testName": "Test #3 - Completely Different",
              "expectedOutcome": "success",
              "expectedRefsDiffer": true,
              "sourceRepoUrl": ${{ toJSON(format('https://github.com/{0}.git', github.repository)) }},
              "targetRepoUrl": "https://github.com/rindeal-js/git-remote-ref-compare.git"
            }
          - |
            {
              "testName": "Test #4 - Empty Source",
              "expectedOutcome": "failure",
              "expectedRefsDiffer": true,
              "sourceRepoUrl": "",
              "targetRepoUrl": ${{ toJSON(format('https://github.com/{0}.git', github.repository)) }}
            }

    name: >
      Test ${{ fromJSON(matrix['json'])['testName'] }}

    steps:
      - name: "Dump Matrix JSON"
        shell: bash -euo pipefail {0}
        run: |
          echo "${MATRIX_JSON}" | jq -c .
        env:
          'MATRIX_JSON': ${{ matrix['json'] }}

      - name: "Checkout current repository"
        uses: 'actions/checkout@main'

      - name: >
          Test ${{ fromJSON(matrix['json'])['testName'] }}
        id: 'test'
        continue-on-error: true
        uses: './'
        with:
          'source-repo-url': ${{ fromJSON(matrix['json'])['sourceRepoUrl'] }}
          'target-repo-url': ${{ fromJSON(matrix['json'])['targetRepoUrl'] }}

      - name: >
          Assert ${{ fromJSON(matrix['json'])['testName'] }}
        uses: 'actions/github-script@main'
        with:
          script: |
            const assert = require('node:assert/strict')

            const steps = JSON.parse(process.env['STEPS'])
            const prevStep = steps[Object.keys(steps).pop()]
            console.log({prevStep})
            const matrix = JSON.parse(process.env['MATRIX_JSON'])

            core.summary.addHeading(matrix["testName"], 2)
            
            assert.strictEqual(prevStep.outcome, matrix["expectedOutcome"])

            if ( matrix["expectedOutcome"] === 'success' ) {
              const outputs = prevStep.outputs

              core.summary.addCodeBlock(JSON.stringify(outputs, null, "  "), 'json')

              console.log({refsDiffer: outputs['refs-differ']})
              const refsDiffer = JSON.parse(outputs['refs-differ'])
              assert.strictEqual(typeof refsDiffer, 'boolean')
              assert.strictEqual(refsDiffer, matrix["expectedRefsDiffer"])

              assert.strictEqual(outputs['source-repo-url'], matrix["sourceRepoUrl"])
              assert.strictEqual(outputs['target-repo-url'], matrix["targetRepoUrl"])
            }
            
            core.summary.write()
        env:
          'STEPS': ${{ toJSON(steps) }}
          'MATRIX_JSON': ${{ matrix['json'] }}
